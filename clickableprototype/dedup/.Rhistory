newdf = igraph::as_data_frame(g, 'vertices')
return(newdf)
}
createDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
ids = purrr::map(ids, function(x){df[[x]]})
ids = do.call(c, ids)
txt = purrr::map(text, function(x){df[[x]]})
txt = do.call(c, txt)
newdf <- tibble::tibble(
id = ids,
text = txt
)
newdf <- dplyr::distinct(newdf)
return(newdf)
}
orderGroups <- function(df, group){
newdf <- df %>%
dplyr::group_by(!!rlang::quo(group)) %>%
tidyr::nest() %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(group, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, 'comp')
newdf <- orderGroups(newdf, 'clust')
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, group){
newdf <- df %>%
dplyr::group_by(!!rlang::quo(group)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(group, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, 'comp')
newdf <- orderGroups(newdf, 'clust')
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, grp){
newdf <- df %>%
dplyr::group_by(!!rlang::quo(grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, 'comp')
newdf <- orderGroups(newdf, 'clust')
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, grp){
print(grp)
newdf <- df %>%
dplyr::group_by(!!rlang::quo(grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, 'comp')
newdf <- orderGroups(newdf, 'clust')
return(newdf)
}
test <- tagDocs(sim)
x = 'Species'
dplyr::group_by(iris, x)
dplyr::group_by(iris, !!rlang::quo(x))
dplyr::group_by(iris, !!rlang::enquo(x))
orderGroups <- function(df, grp){
print(grp)
newdf <- df %>%
dplyr::group_by(!!rlang::enquo(grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, 'comp')
newdf <- orderGroups(newdf, 'clust')
return(newdf)
}
test <- tagDocs(sim)
test
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, comp)
newdf <- orderGroups(newdf, clust)
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, grp){
print(grp)
newdf <- df %>%
dplyr::group_by(!!rlang::enquo(grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, 'comp')
newdf <- orderGroups(newdf, 'clust')
return(newdf)
}
test <- tagDocs(sim)
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, grp){
print(grp)
newdf <- df %>%
dplyr::group_by(!!rlang::quo(grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- tagDocs(sim)
dplyr::group_by(iris, !!rlang::enquo(x))
dplyr::group_by(iris, !!rlang::enquo(x)) %>% tidyr::nest()
dplyr::group_by(iris, 'Species') %>% tidyr::nest()
?rlang::enquos
orderGroups <- function(df, grp){
print(grp)
newdf <- df %>%
dplyr::group_by(rlang::quo(!!grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- tagDocs(sim)
?quo
x
rlang::sy(x)
rlang::sym(x)
dplyr::group_by(iris, rlang::sym(x))
dplyr::group_by(iris, !!rlang::sym(x))
dplyr::group_by(iris, !!rlang::sym(x)) %>% tidyr::nest()
orderGroups <- function(df, grp){
newdf <- df %>%
dplyr::group_by(!!rlang::sym(!!grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, grp){
newdf <- df %>%
dplyr::group_by(!!rlang::sym(grp)) %>%
tidyr::nest() %>%
{print(.); .} %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- tagDocs(sim)
orderGroups <- function(df, grp){
newdf <- df %>%
dplyr::group_by(!!rlang::sym(grp)) %>%
tidyr::nest() %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- tagDocs(sim)
test
tail(test)
library(magrittr)
library(igraph)
sim = readr::read_csv('sample_data3.csv')
docs = tibble::tibble(
id = c(sim$id1, sim$id2),
text = c(sim$comm1, sim$comm2)
) %>%
dplyr::distinct()
g <- sim %>%
dplyr::select(-c(index, `Unnamed: 0`)) %>%
graph_from_data_frame(directed = F)
clust <- cluster_louvain(g)
comp <- components(g)
V(g)$comp <- comp$membership #attachment exists in component
V(g)$clust <- clust$membership #clustering algorithm to group
top1comp <- which(comp$csize >= sort(comp$csize, decreasing = T))[1]
top3comp <- which(comp$csize >= sort(comp$csize, decreasing = T)[3])
g_largest <- g %>%
{. - V(.)[!comp %in% top3]}
plot(g_largest,
vertex.label = '',
vertex.color = V(g_largest)$clust,
vertex.size = 5)
g_largest <- g %>%
{. - V(.)[!comp %in% top3]}
g_largest <- g %>%
{. - V(.)[!comp %in% top3comp]}
plot(g_largest,
vertex.label = '',
vertex.color = V(g_largest)$clust,
vertex.size = 5)
g_largest <- g %>%
{. - V(.)[!comp %in% top1comp]}
plot(g_largest,
vertex.label = '',
vertex.color = V(g_largest)$clust,
vertex.size = 5)
source('~/Code/2021/cdo-special-project/dedup/clusterng_dedup.R')
library(magrittr)
library(igraph)
x <- readr::read_csv('all stakeholders sample data v2.csv')
x
x$doc_id %>% unique
stringr::str_detex(x$doc_id %>% unique)
stringr::str_detect(x$doc_id, '^USDA')
stringr::str_detect(x$doc_id %>% unique(), '^USDA') %>% sum
x$doc_id %>% unique %>% stringr::str_extract('^[^_]+')
x$doc_id %>% unique %>% stringr::str_extract('^[^-]+')
x$doc_id %>% unique %>% stringr::str_extract('^[^-]+') %>% table()
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count()
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T)
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) ^>^
head(20)
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) ^>^
head(19)
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) ^>^
head(19)
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head(19)
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
dplyr::filter(stringr::str_detect(doc_id, 'USDA'))
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
dplyr::filter(stringr::str_detect(doc_id, 'EPA'))
x %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T)
topEPA <-   %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head() %>%
.$doc_id
topEPA <-   %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head() %>%
.$doc_id
topEPA <-   %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head() %>%
.$doc_id
topEPA <-   %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head()
topEPA <- x  %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head() %>%
.$doc_id
topEPA
x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') || doc_id %in% topEPA
)
x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') || doc_id %in% topEPA
) %>%
dplyr::count(doc_id)
x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') | doc_id %in% topEPA
) %>%
dplyr::count(doc_id)
head(x)
x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') | doc_id %in% topEPA
)
x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') | doc_id %in% topEPA
) %>%
.$doc_id
x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') | doc_id %in% topEPA
) %>%
.$doc_id %>%
unique
testDocs <- x %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') | doc_id %in% topEPA
) %>%
.$doc_id %>%
unique
x %>% dplyr::filter(doc_id == testDocs[1])
clusterDocs <- function(df, ids = c('id1', 'id2')){
df <- dplyr::select(df, dplyr::all_of(ids))
g <- igraph::graph_from_data_frame(df, directed = F)
clust <- igraph::cluster_louvain(g)
comp <- igraph::components(g)
V(g)$comp <- comp$membership #attachment exists in component
V(g)$clust <- clust$membership #clustering algorithm to group
newdf = igraph::as_data_frame(g, 'vertices')
return(newdf)
}
createDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
ids = purrr::map(ids, function(x){df[[x]]})
ids = do.call(c, ids)
txt = purrr::map(text, function(x){df[[x]]})
txt = do.call(c, txt)
newdf <- tibble::tibble(
id = ids,
text = txt
)
newdf <- dplyr::distinct(newdf)
return(newdf)
}
orderGroups <- function(df, grp){
newdf <- df %>%
dplyr::group_by(!!rlang::sym(grp)) %>%
tidyr::nest() %>%
dplyr::mutate(data = purrr::map(data, function(x){
x[[paste0(grp, "_order")]] <- 1:nrow(x)
return(x)
})) %>%
tidyr::unnest(cols = c(data)) %>%
dplyr::ungroup()
return(newdf)
}
tagDocs <- function(df, ids = c('id1', 'id2'), text = c('comm1', 'comm2')){
docs <- createDocs(df, ids, text)
clust <- clusterDocs(df, ids)
newdf <- dplyr::left_join(clust, docs, by= c("name" = "id"))
newdf <- orderGroups(newdf, "comp")
newdf <- orderGroups(newdf, "clust")
return(newdf)
}
test <- x %>%
dplyr::filter(doc_id == testDocs[1]) %>%
tagDocs()
test
dir()
dir.create('data')
testDocs
rm(x)
stake <- readr::read_csv('all stakeholders sample data v2.csv')
topEPA <- stake  %>%
dplyr::group_by(doc_id) %>%
dplyr::count(sort = T) %>%
head() %>%
.$doc_id
testDocs <- stake %>%
dplyr::filter(
stringr::str_detect(doc_id, '^USDA') | doc_id %in% topEPA
) %>%
.$doc_id %>%
unique
test <- stake %>%
dplyr::filter(doc_id == testDocs[1]) %>%
tagDocs()
test
lapply(testDocs, function(id){
tmp <- dplyr::filter(stake, doc_id == id)
dedup <- tagDocs(tmp)
dedup$rule = id
readr::write_csv(dedup, paste0('data/', id, '.csv'))
})
